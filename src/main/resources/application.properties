# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#Local Database
# Connection url for the database

spring.datasource.url=jdbc:mysql://${WEB_MYSQL_HOST:localhost}:${WEB_MYSQL_PORT:3306}/${WEB_MYSQL_DB:vlbi}?allowPublicKeyRetrieval=true&useUnicode=yes&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.datasource.username=${DB_USER_NAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.defer-datasource-initialization=true
# Username and password
spring.sql.init.platform=mysql
spring.sql.init.mode=always
spring.jpa.properties.hibernate.hbm2ddl.import_files=import.sql
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
#Keep the connection alive if idle for a long time (needed in production)
spring.datasource.validationQuery=SELECT 1
spring.servlet.multipart.max-file-size=10MB

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# ===============================
# logs
# ===============================
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
logging.file.name=logs/logs.txt

# ===============================
# TOMCAT
# ===============================
server.address=${SERVER_IP:localhost}
server.error.whitelabel.enabled=false
server.tomcat.accesslog.enabled=true
server.port=${SERVER_PORT:8080}
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=${SSL_KEY}
# The password used to generate the certificate
server.ssl.key-store-password=${SSL_PASSWORD}
server.ssl.key-alias=${SSL_ALIAS}
server.ssl.enabled=true

# ===============================
# SMTP EMAIL
# ===============================
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USER_NAME}
spring.mail.password=${MAIL_USER_PASSWORD}
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.main.allow-bean-definition-overriding=true

# ===============================
# Session
# ===============================
spring.session.store-type=jdbc
# Session timeout. If a duration suffix is not specified, seconds are used.
server.servlet.session.timeout=600s
# Database schema initialization mode.
spring.session.jdbc.initialize-schema=always
# Name of the database table used to store sessions.
#spring.session.jdbc.schema=jdbc:mysql://localhost:3306/vlbi?allowPublicKeyRetrieval=true&useUnicode=yes&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.session.jdbc.table-name=SPRING_SESSION
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
#spring.session.jdbc.schema=jdbc:mysql://localhost:3306/vlbi?allowPublicKeyRetrieval=true&useUnicode=yes&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
# Charset of HTTP requests and responses. Added to the "Content-Type"
# header if not set explicitly.
server.servlet.encoding.charset=UTF-8
# Enable http encoding support.
server.servlet.encoding.enabled=true
# Force the encoding to the configured charset on HTTP requests and responses.
server.servlet.encoding.force=true

# ===============================
# DEV
# ===============================
spring.devtools.restart.enabled=false

# ===============================
# FOR GOOGLE CALENDAR
# ===============================
spring.security.oauth2.client.registration.google.client-id = ${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret = ${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token

# ===============================
# FOR SCRIPTS
# ===============================

pysched.script.path=${PYSCHED_SCRIPT_PATH}
api.script.path=${API_SCRIPT_PATH}
google.script.path=${GOOGLE_SCRIPT_PATH}
google.event.script.path=${GOOGLE_EVENT_SCRIPT_PATH}
google.color.script.path=${GOOGLE_COLOR_SCRIPT_PATH}
